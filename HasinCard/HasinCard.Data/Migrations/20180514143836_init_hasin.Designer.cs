// <auto-generated />
using HasinCard.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace HasinCard.Data.Migrations
{
    [DbContext(typeof(HasinCardDbContext))]
    [Migration("20180514143836_init_hasin")]
    partial class init_hasin
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("HasinCard.Core.Domain.Cards", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDelete");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<int>("ProductId");

                    b.Property<int>("SysUserId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SysUserId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("HasinCard.Core.Domain.Categorys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDelete");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<int>("SortNo");

                    b.Property<int>("SysUserId");

                    b.HasKey("Id");

                    b.HasIndex("SysUserId");

                    b.ToTable("Categorys");
                });

            modelBuilder.Entity("HasinCard.Core.Domain.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryId");

                    b.Property<decimal>("CostPrice");

                    b.Property<DateTime>("CreationTime");

                    b.Property<decimal>("Instructions");

                    b.Property<bool>("IsDelete");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<decimal>("ProductDesc");

                    b.Property<string>("ProductName")
                        .HasMaxLength(100);

                    b.Property<decimal>("SalePrice");

                    b.Property<int>("SortNo");

                    b.Property<int>("SysUserId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SysUserId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("HasinCard.Core.Domain.SysUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("QQ")
                        .HasMaxLength(15);

                    b.Property<string>("TelNo")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("SysUsers");
                });

            modelBuilder.Entity("HasinCard.Core.Domain.Cards", b =>
                {
                    b.HasOne("HasinCard.Core.Domain.Products", "Procut")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HasinCard.Core.Domain.SysUsers", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("SysUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HasinCard.Core.Domain.Categorys", b =>
                {
                    b.HasOne("HasinCard.Core.Domain.SysUsers", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("SysUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HasinCard.Core.Domain.Products", b =>
                {
                    b.HasOne("HasinCard.Core.Domain.Categorys", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HasinCard.Core.Domain.SysUsers", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("SysUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
